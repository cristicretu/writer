{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  ComputedFields,\n  defineDocumentType,\n  makeSource,\n} from 'contentlayer/source-files';\nimport readingTime from 'reading-time';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePrettyCode, { Options } from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\n\nconst rehypePrettyCodeOptions: Partial<Options> = {\n  onVisitHighlightedLine(node) {\n    node.properties.className.push('syntax-line--highlighted');\n  },\n  onVisitHighlightedWord(node) {\n    node.properties.className = ['syntax-word--highlighted'];\n  },\n  onVisitLine(node) {\n    // Prevent lines from collapsing in `display: grid` mode, and\n    // allow empty lines to be copy/pasted\n    if (node.children.length === 0) {\n      node.children = [{ type: 'text', value: ' ' }];\n    }\n    node.properties.className.push('syntax-line');\n  },\n  theme: 'poimandres',\n  tokensMap: {\n    // VScode command palette: Inspect Editor Tokens and Scopes\n    // https://github.com/Binaryify/OneDark-Pro/blob/47c66a2f2d3e5c85490e1aaad96f5fab3293b091/themes/OneDark-Pro.json\n    fn: 'entity.name.function',\n    objKey: 'meta.object-literal.key',\n  },\n};\n\nconst computedFields: ComputedFields = {\n  readingTime: { resolve: (doc) => readingTime(doc.body.raw), type: 'json' },\n  slug: {\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\n    type: 'string',\n  },\n  structuredData: {\n    resolve: (doc) => ({\n      '@context': 'https://schema.org',\n      '@type': 'BlogPosting',\n      author: {\n        '@type': 'Person',\n        name: 'Cristian Cre\u021Bu',\n      },\n      dateModified: doc.publishedAt,\n      datePublished: doc.publishedAt,\n      description: doc.summary,\n      headline: doc.title,\n      image: doc.image\n        ? `https://cretu.dev${doc.image}`\n        : `https://cretu.dev/static/images/og.png`,\n      url: `https://cretu.dev/writing/${doc._raw.flattenedPath}`,\n    }),\n    type: 'json',\n  },\n  wordCount: {\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n    type: 'number',\n  },\n};\n\nconst Writing = defineDocumentType(() => ({\n  computedFields,\n  contentType: 'mdx',\n  fields: {\n    image: { required: true, type: 'string' },\n    publishedAt: { required: true, type: 'string' },\n    summary: { required: true, type: 'string' },\n    title: { required: true, type: 'string' },\n  },\n  filePathPattern: 'writing/*.mdx',\n  name: 'Writing',\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Writing],\n  mdx: {\n    rehypePlugins: [\n      rehypeSlug,\n      [rehypePrettyCode, rehypePrettyCodeOptions],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor'],\n          },\n        },\n      ],\n    ],\n    remarkPlugins: [remarkGfm],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,sBAAmC;AAC1C,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAEtB,IAAM,0BAA4C;AAAA,EAChD,uBAAuB,MAAM;AAC3B,SAAK,WAAW,UAAU,KAAK,0BAA0B;AAAA,EAC3D;AAAA,EACA,uBAAuB,MAAM;AAC3B,SAAK,WAAW,YAAY,CAAC,0BAA0B;AAAA,EACzD;AAAA,EACA,YAAY,MAAM;AAGhB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC/C;AACA,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,OAAO;AAAA,EACP,WAAW;AAAA;AAAA;AAAA,IAGT,IAAI;AAAA,IACJ,QAAQ;AAAA,EACV;AACF;AAEA,IAAM,iBAAiC;AAAA,EACrC,aAAa,EAAE,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,GAAG,MAAM,OAAO;AAAA,EACzE,MAAM;AAAA,IACJ,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,IAC9D,MAAM;AAAA,EACR;AAAA,EACA,gBAAgB;AAAA,IACd,SAAS,CAAC,SAAS;AAAA,MACjB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,MACA,cAAc,IAAI;AAAA,MAClB,eAAe,IAAI;AAAA,MACnB,aAAa,IAAI;AAAA,MACjB,UAAU,IAAI;AAAA,MACd,OAAO,IAAI,QACP,oBAAoB,IAAI,UACxB;AAAA,MACJ,KAAK,6BAA6B,IAAI,KAAK;AAAA,IAC7C;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA,WAAW;AAAA,IACT,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,IAC9C,MAAM;AAAA,EACR;AACF;AAEA,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACxC;AAAA,EACA,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,UAAU,MAAM,MAAM,SAAS;AAAA,IACxC,aAAa,EAAE,UAAU,MAAM,MAAM,SAAS;AAAA,IAC9C,SAAS,EAAE,UAAU,MAAM,MAAM,SAAS;AAAA,IAC1C,OAAO,EAAE,UAAU,MAAM,MAAM,SAAS;AAAA,EAC1C;AAAA,EACA,iBAAiB;AAAA,EACjB,MAAM;AACR,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA,MACA,CAAC,kBAAkB,uBAAuB;AAAA,MAC1C;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,eAAe,CAAC,SAAS;AAAA,EAC3B;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
